generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccessInfoToken {
  id     Int     @id @default(autoincrement())
  token  String  @unique
  userId String?
  isUsed Boolean @default(false)

  @@index([userId])
}

model BusinessInfo {
  id                      Int     @id @default(autoincrement())
  historyAndVision        String
  businessType            String
  businessModel           String
  mainProduct             String
  competitiveAdvantage    String
  marketResearch          String
  marketingPlan           String
  accountant              String
  financialSeparation     String
  technologySoftware      String
  financialConsultant     String
  objectives              String
  challenges              String
  mainAspectsToImprove    String
  administrationChallenge String
  employees               String
  audits                  String
  advertising             String
  salesProjections        String
  adMetrics               String? @default("-")
}

model Feedback {
  id                     Int         @id @default(autoincrement())
  comprehensiveDiagnosis String
  surprisingAspects      String
  newLearnings           String
  suggestions            String
  recommendSession       BOOLOPTIONS @default(Si)
}

model SubjectiveAnalysis {
  id                      Int    @id @default(autoincrement())
  financialKnowledge      String
  accountingKnowledge     String
  financialTraining       String
  partnerStatus           String
  delegation              String
  emotionalExperience     String
  missedOpportunity       String
  suddenGrowth            String
  childhoodExperience     String
  emotionalEvaluation     String
  longTermCommitment      String
  financialRiskTolerance  String
  financialDecisionMaking String
  delegatedAreas          String @default("-")
}

model User {
  id                         String @id
  name                       String
  instagram                  String @unique
  whatsapp                   String @unique
  country                    String
  email                      String @unique
  age                        String
  businessAgeAndSatisfaction String
  referredBy                 String
  web                        String @default("Sin Web")
}

model Business {
  id                   Int     @id @default(autoincrement())
  businessInfoId       Int?    @unique
  subjectiveAnalysisId Int?    @unique
  financialAnalysisId  Int?    @unique
  feedbackId           Int?    @unique
  userId               String?
  accessInfoTokenId    Int?    @unique

  @@index([userId])
}

model FinancialAnalysis {
  id                       Int     @id @default(autoincrement())
  financialPolicy          String
  financialIndicators      String
  profitabilityMetrics     String
  currencyMeasurement      String
  inflationMitigation      String
  financialAccounts        String
  ownerCompensation        String
  budgeting                String
  costStructure            String
  emergencyFund            String
  breakevenAnalysis        String
  debtManagement           String
  liquidityMeasurement     String
  financialStatements      String
  inventoryTracking        String
  externalFinancing        String
  growthTransitionPlan     String
  financialConsultantPlan  String
  trackingMethod           String? @default("-")
  extraCommentAboutCompany String? @default("-")
}

enum BOOLOPTIONS {
  Si
  No
}
